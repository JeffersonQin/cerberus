(* Created by Victor Gomes 2017-04-30 *)

open Pp_prelude
open Pp_ocaml

let std_filename = "coreStd.ml"

let print_head filename =
  !^"(* Generated by Cerberus *)" ^//^
  !^"module RT = Rt_ocaml" ^/^
  !^"module M = Ocaml_mem" ^/^
  !^"module T = AilTypes" ^/^
  !^"module C = Core_ctype" ^/^
  !^"module N = Nat_big_num" ^//^
  !^"let (>>=) = M.bind" ^/^
  !^"let rec _std_function_printf cont xs args =\
     \n  RT.printf conv_int xs args >>= fun x -> cont x" ^/^
  !^"and _std_function_sprintf cont _ _ _ =\
     \n  RT.sprintf () >>= fun x -> cont x" ^/^
  !^"and _std_function_snprintf cont _ _ _ _ =\
     \n  RT.snprintf () >>= fun x -> cont x" ^/^
  !^"and _std_function_exit _ =\
     \n failwith \"_std_function_exit\"" ^/^
  !^"and _std_function__Exit _ =\
     \n failwith \"_std_function__Exit\"" ^/^
  !^"and _std_function_signal _ =\
     \n  failwith \"_std_function_signal\""

let gen globs impl stdlib =
  let contents =
    print_head std_filename ^^
    print_impls globs impl ^^
    print_funs globs stdlib ~init:false
  in
  let oc = open_out std_filename in
  P.ToChannel.pretty 1. 80 oc contents;
  close_out oc
