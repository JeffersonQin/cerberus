Phase 1 Project Selection Status Report

Name: Justus Matthiesen
College: Gonville & Caius College
User Identifier: jm614
Director of Studies: Prof Peter Robinson (Peter.Robinson@cl.cam.ac.uk)

1. Following a suggestion from Peter Sewell, I intend to mathematize parts of the C programming language to gain a formal understanding of undefined behaviour.
The idea of the project is to write a tool that reads in a C program and outputs a graph representation of all standard-conforming execution path and also generates an OCaml program that computes all valid outcomes of the program. Implementing such a tool would involve
- finding an operational semantics for the chosen subset of the language that corresponds closely to the C standard,
- implementing the semantics in the proof assistant Isabelle [1],
- writing a front-end based on the CIL infrastructure [2] that parses C programs,
- combining front-end and Isabelle formalisation to determine all standard-conforming execution paths of a given program,
- employing Isabelle to generate OCaml programs from the semantics and computed execution paths,
- writing an output module to create graph representations from the execution path data.
As part of the evaluation of the project one could compare the results of the tool to existing C compilers using, for example, GCC's C language test suite.
The project will draw on previous work done by Michael Norrish on deterministic C semantics [3], the CompCert project [4], and the Mathematizing C++ Concurrency project [5].

[1] http://www.cl.cam.ac.uk/research/hvg/Isabelle/
[2] http://www.cs.berkeley.edu/~necula/cil/
[3] http://www.cl.cam.ac.uk/~mn200/PhD/
[4] http://compcert.inria.fr/
[5] http://www.cl.cam.ac.uk/~pes20/


2. Dr Peter Sewell (Peter.Sewell@cl.cam.ac.uk)

3. No special requirements. However, I am planning to use my own machine for development.
