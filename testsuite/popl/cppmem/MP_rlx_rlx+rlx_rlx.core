{-
int main() {
  atomic_int x = 0; atomic_int y = 0;
  {{{  { x.store(1, mo_relaxed);
         y.store(1, mo_relaxed); }
  ||| { r1 = x.load(mo_relaxed).readsvalue(1);
        r2 = y.load(mo_relaxed).readsvalue(0); }
  }}};
  return 0; }
-}

fun main() : [integer] :=
  let strong x = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  let strong y = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  
  let strong () = store("_Atomic(signed int)", x, 0) in
  let strong () = store("_Atomic(signed int)", y, 0) in
  
  let strong (_, ret) = par(
    let strong () = store("_Atomic(signed int)", x, 1, relaxed) in
    let strong () = store("_Atomic(signed int)", y, 1, relaxed) in
      return(())
    end end
  ,
    let strong r1 = load("_Atomic(signed int)", y, relaxed) in
    let strong r2 = load("_Atomic(signed int)", x, relaxed) in
      return((r1, r2))
    end end
  ) in
  return(ret)
  
  end end end end end