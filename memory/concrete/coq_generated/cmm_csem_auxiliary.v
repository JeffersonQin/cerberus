(* Generated by Lem from ocaml_generated/cmm_csem.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Open Scope nat_scope.
Open Scope string_scope.


Lemmaproduce_well_formed_threads_def_lemma:((forallopsem,(Bool.eqb
    (forall Xo  p,(exists Xw  rl,( ((negb (opsem p Xo)) || well_formed_threads (Xo,Xw,rl)) : Prop) : Prop)) 
  (BOOM (opsem :opsem_t )) : Prop)): Prop) .



Lemma genthm:( 
  (forall opsem  p,( ((negb (cond opsem p)) || ( classical_boolean_equivalence(rf_behaviour M1 P1 opsem p) (rf_behaviour M2 P2 opsem p))) : Prop)): Prop) .

Lemma thm0:(
(forall opsem  p,(
  ( classical_boolean_equivalence(behaviour with_consume_memory_model true_condition opsem p)
   (behaviour standard_memory_model true_condition opsem p)) : Prop)): Prop) .


Lemma thm1:(
(forall opsem  p,( ((negb (statically_satisfied sc_fenced_condition opsem p)) || ( classical_boolean_equivalence(behaviour sc_fenced_memory_model sc_fenced_condition opsem p)
   (behaviour with_consume_memory_model true_condition opsem p))) : Prop)): Prop) .

Lemma thm2:(
(forall opsem  p,( ((negb (statically_satisfied sc_accesses_condition opsem p)) || ( classical_boolean_equivalence(behaviour sc_accesses_memory_model sc_accesses_condition opsem p)
   (behaviour sc_fenced_memory_model sc_fenced_condition opsem p))) : Prop)): Prop) .

Lemma thm3:(
(forall opsem  p,( ((negb (statically_satisfied release_acquire_fenced_condition opsem p)) || ( classical_boolean_equivalence(behaviour release_acquire_fenced_memory_model release_acquire_fenced_condition opsem p)
   (behaviour sc_accesses_memory_model sc_accesses_condition opsem p))) : Prop)): Prop) .

Lemma thm4:(
(forall opsem  p,( ((negb (statically_satisfied release_acquire_relaxed_condition opsem p)) || ( classical_boolean_equivalence(behaviour release_acquire_relaxed_memory_model release_acquire_relaxed_condition opsem p)
   (behaviour release_acquire_fenced_memory_model release_acquire_fenced_condition opsem p))) : Prop)): Prop) .

Lemma thm6:(
(forall opsem  p,( ((negb (statically_satisfied relaxed_only_condition opsem p)) || ( classical_boolean_equivalence(behaviour relaxed_only_memory_model relaxed_only_condition opsem p)
   (behaviour release_acquire_relaxed_memory_model release_acquire_relaxed_condition opsem p))) : Prop)): Prop) .

Lemma thm7:(
(forall opsem  p,( ((negb (statically_satisfied locks_only_condition opsem p)) || ( classical_boolean_equivalence(behaviour locks_only_memory_model locks_only_condition opsem p)
   (behaviour release_acquire_memory_model release_acquire_condition opsem p))) : Prop)): Prop) .

Lemma thm8:(
(forall opsem  p,( ((negb (statically_satisfied locks_only_condition opsem p)) || ( classical_boolean_equivalence(behaviour locks_only_memory_model locks_only_condition opsem p)
   (behaviour relaxed_only_memory_model relaxed_only_condition opsem p))) : Prop)): Prop) .

Lemma thm9:(
(forall opsem  p,( ((negb (statically_satisfied single_thread_condition opsem p)) || ( classical_boolean_equivalence(behaviour single_thread_memory_model single_thread_condition opsem p) 
   (behaviour locks_only_memory_model locks_only_condition opsem p))) : Prop)): Prop) .

Lemma thm10:(
(forall opsem  p,( ((negb (statically_satisfied release_acquire_SC_condition opsem p)) || ( classical_boolean_equivalence(behaviour sc_fenced_memory_model sc_fenced_condition opsem p)
   (behaviour release_acquire_SC_memory_model release_acquire_SC_condition opsem p))) : Prop)): Prop) .

Lemma thm5:(
(forall opsem  p,( ((negb (statically_satisfied release_acquire_condition opsem p)) || ( classical_boolean_equivalence(behaviour release_acquire_memory_model release_acquire_condition opsem p)
   (behaviour release_acquire_SC_memory_model release_acquire_SC_condition opsem p))) : Prop)): Prop) .

Lemma thm11:(
(forall opsem  p,( ((negb (statically_satisfied SC_condition opsem p)) || ( classical_boolean_equivalence(behaviour SC_memory_model SC_condition opsem p)
   (behaviour release_acquire_SC_memory_model release_acquire_SC_condition opsem p))) : Prop)): Prop) .

Lemma thm12:(
(forall opsem  p,( ((negb (statically_satisfied locks_only_condition opsem p)) || ( classical_boolean_equivalence(behaviour SC_memory_model SC_condition opsem p) 
   (behaviour locks_only_memory_model locks_only_condition opsem p))) : Prop)): Prop) .

Lemma bigthm:(
(forall opsem  p,( ((negb (opsem_assumptions opsem &&
  statically_satisfied tot_condition opsem p)) || ( classical_boolean_equivalence(rf_behaviour SC_memory_model SC_condition opsem p)
   (rf_behaviour tot_memory_model tot_condition opsem p))) : Prop)): Prop) .
