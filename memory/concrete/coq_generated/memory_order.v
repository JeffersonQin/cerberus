(* Generated by Lem from ocaml_generated/memory_order.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Require Import coqharness.

Open Scope nat_scope.
Open Scope string_scope.

Require Import lem_pervasives.
Require Export lem_pervasives.
Require Import cmm_aux.
Require Export cmm_aux.



Definition aid : Type :=  aid_impl .
Definition aid_default: aid  := aid_impl_default.
Definition program : Type :=  program_impl .
Definition program_default: program  := program_impl_default.
Definition tid : Type :=  tid_impl .
Definition tid_default: tid  := tid_impl_default.
Definition location : Type :=  location_impl .
Definition location_default: location  := location_impl_default.
Definition cvalue : Type :=  cvalue_impl .
Definition cvalue_default: cvalue  := cvalue_impl_default.


Inductive memory_order : Type := 
  | NA: memory_order 
  | Seq_cst: memory_order 
  | Relaxed: memory_order 
  | Release: memory_order 
  | Acquire: memory_order 
  | Consume: memory_order 
  | Acq_rel: memory_order .
Definition memory_order_default: memory_order  := NA.

Instance x49_Eq : Eq memory_order := {
   isEqual   :=  classical_boolean_equivalence;
   isInequal  :=  unsafe_structural_inequality
}.


Instance x48_SetType : SetType memory_order := {
   setElemCompare  :=  (fun  x  y=>EQ)
}.


Instance x47_Show : Show memory_order := {
   show   mo := 
    match ( mo) with 
    | NA      => "NA"
    | Seq_cst => "Seq_cst"
    | Relaxed => "Relaxed"
    | Release => "Release"
    | Acquire => "Acquire"
    | Consume => "Consume"
    | Acq_rel => "Acq_rel"
    end
}.

