(* Generated by Lem from ocaml_generated/Range.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Require Import coqharness.

Open Scope nat_scope.
Open Scope string_scope.

Require Import lem_pervasives.
Require Export lem_pervasives.


Definition range : Type := ( Z  * Z ) % type.
Definition range_default: range  := (Z_default, Z_default).
(* [?]: removed value specification. *)

Definition min   (r : range )  : Z :=  (@ fst _ _) r.
(* [?]: removed value specification. *)

Definition max   (r : range )  : Z :=  (@ snd _ _) r.
(* [?]: removed value specification. *)

Definition make_range  (x : Z ) (y : Z )   :  range :=  (x, y).
(* [?]: removed value specification. *)

Definition no_overlap  (r1 : (Z *Z ) % type) (r2 : (Z *Z ) % type)  : bool :=  int_lteb
  (max r1) (min r2) || int_lteb (max r2) (min r1).
(* [?]: removed value specification. *)

Definition sub  (r1 : (Z *Z ) % type) (r2 : (Z *Z ) % type)  : bool :=  int_lteb
  (max r1) (max r2) && int_lteb (min r2) (min r1).
(* [?]: removed value specification. *)

Definition mem  (w : Z ) (r : (Z *Z ) % type)  : bool :=  int_lteb
  (min r) w && int_lteb w (max r).

