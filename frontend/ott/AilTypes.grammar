storageDuration :: '' ::=
% INC?
  {{ com storage duration (\S6.2.4\#1) }}
  | static :: :: Static
  | thread :: :: Thread
  | automatic :: :: Automatic
  | allocated :: :: Allocated % TODO: look at (ยง7.22.3)

integerBaseType, ibt :: '' ::=
% INC?
  {{ com standard signed integer types (\S6.2.5\#4) }}
  | char :: :: Ichar
      {{ com corresponds to \textbf{signed/unsigned char} }}
  | short :: :: Short
      {{ com corresponds to \textbf{short int}            }}
  | int :: :: Int
  | long :: :: Long
      {{ com corresponds to \textbf{long int}             }}
  | long long :: :: LongLong
      {{ com corresponds to \textbf{long long int}        }}

integerType, it :: '' ::=
% INC?
  {{ com integer types (\S6.2.5\#17) }}
  | char :: :: Char
  % TODO: add enumerated types
  | bool :: :: Bool
      {{ com corresponds to \textbf{\_Bool} }}
  | signed ibt :: :: Signed
  | unsigned ibt :: :: Unsigned

basicType, bt :: '' ::=
% INC?
  {{ com basic types (\S6.2.5\#14) }}
  | it :: :: Integer

qualifier :: '' ::=
% INC? {{ coq-equality }}
  {{ com type qualifiers (\S6.7.3) }}
  | const :: :: Const
  | restrict :: :: Restrict
  | volatile :: :: Volatile

qualifiers, qs :: 'qualifiers_' ::=
% INC? {{ coq list qualifier }}
  | [] :: :: Empty
      {{ lem [] }}
      {{ coq nil }}
  | qualifier1 .. qualifierk :: :: Def
      {{ coq [[qualifier1 .. qualifierk]] }}
  | qs1 @ qs2 :: :: App
      {{ tex [[qs1]] \cup [[qs2]] }}
      {{ lem [[qs1]] @ [[qs2]] }}
      {{ coq (List.app [[qs1]] [[qs2]]) }}
  | ( qs ) :: S :: Parens
      {{ lem [[qs]] }}
      {{ icho [[qs]] }}

type, ty {{ tex \tau }} :: '' ::=
% INC?
  {{ com $\texttt{Ail}_\tau$ types }}
  | ( ty ) :: S :: TypeParens
      {{ lem [[ty]] }} % TODO: lem is not in icho ?
      {{ icho [[ty]] }}
  | void :: :: Void
      {{ com \texttt{void} type (\S6.2.5\#19) }}
  | bt :: :: Basic
      {{ com basic types (\S6.2.5\#14) }}
% TODO:
%  | enum id                         ::   :: Enum
%      {{ com enumerate types (\S6.2.5\#16) }}
     % TODO: add names to an env + MOVE TO INTEGER_TYPE
  | ty [ n ] ::   :: Array
      {{ com array types (\S6.2.5\#20) }}
% TODO:
%  | struct
% TODO:
%  | union
  | ty ( qs1 ty1 , .. , qsk tyk ) :: :: Function
      {{ com function types }}
  | qs ty *  :: :: Pointer
      {{ com pointer types }}
% TODO:
% atomic types 
%  | promote ty :: :: Promote
%      {{ com integer promotion }}
%  | usualArithmetic ty1 ty2 :: :: UsualArithmetic
%      {{ tex \texttt{usual\_arithmetic}([[ty1]],[[ty2]]) }}

typeCategory, ty_c :: '' ::=
% INC?
  | lvalueT qs ty :: :: LvalueType
  | expressionT ty :: :: ExpressionType
