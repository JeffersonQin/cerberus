defns
Jail :: '' ::=

defn
id fv e :: :: fv :: Fv by

id fv e_l
----------------------- :: Unary
id fv unaryOperator e_l

id fv e_l1
------------------------------ :: Binary1
id fv e_l1 binaryOperator e_l2

id fv e_l2
------------------------------- :: Binary2
id fv e_l1 binaryOperator e_l2

id fv e_l1
----------------- :: Assign1
id fv e_l1 = e_l2

id fv e_l2
----------------- :: Assign2
id fv e_l1 = e_l2

id fv e_l1
------------------------------------ :: CompoundAssign1
id fv e_l1 arithmeticOperator = e_l2

id fv e_l2
------------------------------------ :: CompoundAssign2
id fv e_l1 arithmeticOperator = e_l2

id fv e_1
------------------------- :: Conditional1
id fv e_l1 ? e_l2 : e_l3

id fv e_2
------------------------- :: Conditional2
id fv e_l1 ? e_l2 : e_l3

id fv e_l3
------------------------- :: Conditional3
id fv e_l1 ? e_l2 : e_l3

id fv e_l
-------------- :: Cast
id fv (ty) e_l

id fv e_l
-------------------------- :: Call
id fv e_l (e_l1, .., e_lk)

id fv e_lj
-------------------------- :: CallArgument
id fv e_l (e_l1, .., e_lk)

%TODO

% id fv e
% ----------------- :: Memberof
% id fv (a e) . id'

% id fv e
% ------------------ :: Memberofptr
% id fv (a e) -> id'

-------- :: Variable
id fv id

defn
id fv e_l :: :: fvL :: FvL by

id fv e
----------- :: Def
id fv (a e)

defn
isNullPointerConstant e_l :: :: isNullPointerConstant :: IsNullPointerConstant by

------------------------- :: Zero
isNullPointerConstant a 0

isNullPointerConstant e_l
------------------------------------ :: Pointer
isNullPointerConstant a (void *) e_l
