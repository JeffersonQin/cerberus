type t = <|min : num; max : num|>

let in_range r v = r.min <= v && v <= r.max
let max_of r = r.max
let min_of r = r.min

let zero = <|min = 0; max = 0|>
let bool = <|min = 0; max = 1|>

(* (ยง5.2.4.2.1) Sizes of integer types <limits.h> *)
let char_bit = 8
let schar  = <|min = 0-(2^7  - 1); max = 2^7  - 1|> (* signed char *)
let uchar  = <|min = 0           ; max = 2^8  - 1|> (* unsigned char *)
let shrt   = <|min = 0-(2^15 - 1); max = 2^15 - 1|> (* short int *)
let ushrt  = <|min = 0           ; max = 2^16 - 1|> (* unsigned short int *)
let int    = <|min = 0-(2^15 - 1); max = 2^15 - 1|> (* int *)
let uint   = <|min = 0           ; max = 2^16 - 1|> (* unsigned int *)
(* TODO: fix when Lem supports bignums *)
let long   = zerp (*<|min = 0-(2^31 - 1); max = 2^31 - 1|>*) (* long int *)
let ulong  = zero (*<|min = 0           ; max = 2^32 - 1|>*) (* unsigned long int *)
let llong  = zero (*<|min = 0-(2^63 - 1); max = 2^63 - 1|>*) (* long long int *)
let ullong = zero (*<|min = 0           ; max = 2^64 - 1|>*) (* unsigned long long int *)
