type 'a t = ('a, Symbol.sset) State.t

let unit = State.unit
let bind = State.bind
let map = State.map

module Operators = struct
  let (>>=) = bind
  let (<$>) = map
end

let init m = State.run m Symbol.init
let run = State.run

let fresh = Symbol.fresh
let fresh_pretty n = Symbol.fresh_pretty n

let rec foldr_list f l a =
  match l with
    | []    -> unit a
    | x::xs -> bind (f x a) (fun a' -> foldr_list f xs a')
  end