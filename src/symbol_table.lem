open Global

type ('a, 'b) t = ('a, 'b) map list

let emp = []

let add a b t =
  match t with
    | t::ts -> Pmap.add a b t :: ts
  end

let rec find a t =
  match t with
    | m::ms ->
       match Pmap.mem a m with
         | true  -> Some (Pmap.find a m)
         | false -> find a ms
      end
    | [] -> None
  end

let mem a t = Option.is_some (find a t)

let symbols t =
  match t with
    | m::_ -> Pmap.fold (fun _ b l -> b::l) m []
  end

let create_scope t = Pmap.empty::t

let destroy_scope t =
  match t with
    | _::ms -> ms
  end

let return_scope t =
  match t with
    | m::_ -> [m]
  end

let push_table t1 t2 = t1 @ t2