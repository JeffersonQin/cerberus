module L = Lexing

type t = <|
  start : L.position;
  stop  : L.position
|>

let make s e = <|start = s; stop = e|>

let name              <|start = s; stop = _|> = s.L.pos_fname
let first_line        <|start = s; stop = _|> = s.L.pos_lnum
let last_line         <|start = _; stop = e|> = e.L.pos_lnum
let first_line_offset <|start = s; stop = _|> = s.L.pos_lnum
let last_line_offset  <|start = _; stop = e|> = e.L.pos_lnum
let first_char        <|start = s; stop = _|> = s.L.pos_cnum
let last_char         <|start = _; stop = e|> = e.L.pos_cnum

let to_string p =
  let f = first_line p in
  let l = last_line  p in
  if f = l then
    "line " ^ string_of_num f
  else
    "lines " ^ string_of_num f ^ "-" ^ string_of_num l