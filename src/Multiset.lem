type 'a t = ('a, num) Pmap.map

let emp = Pmap.empty

let count e m =
  match Pmap.mem e m with
    | true -> Pmap.find e m
    | false-> 0
  end

let mem e m = (count e m > 0)
let add e m = Pmap.add e (1 + count e m) m

let from_list ls = List.fold_left (fun m e -> add e m) emp ls

sub [ocaml] unv_compare_int = Pervasives.compare
sub [ocaml] map_compare_int = Pmap.compare
let compare_int t1 t2 = map_compare_int unv_compare_int t1 t2
