Pointer comparison:

- ยง6 6.5.9: ``Two pointers compare equal if [...]  one is a pointer to one past
  the end of one array object and the other is a pointer to the start of a
  different array object that happens to immediately follow the first array
  object in the address space.``

  Currently, the constraint solving procedures assumes that two pointers with
  distinct base addresses do not compare equal.

Pointer arithmetic:

- Pointer overflow.
- Pointer substraction, ptrdiff_t type.

Symbolic execution:

- No longer conviced that type conversions between signed and unsigned types
  are necessary.
