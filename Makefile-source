SOURCE_ail=\
  ail/AilSyntax.lem \
  ail/AilTypes.lem \
  ail/GenTypes.lem \

SOURCE_ail_typing=\
  ail/AilSyntaxAux.lem \
  ail/AilTypesAux.lem \
  ail/AilTyping.lem \
  ail/AilWf.lem \
  ail/Annotation.lem \
  ail/Common.lem \
  ail/Context.lem \
  ail/ErrorMonad.lem \
  ail/GenTypesAux.lem \
  ail/GenTyping.lem \
  ail/Range.lem \
  ail/TypingError.lem \
  ail/Implementation.lem 

SOURCE_cabs=\
  cabs.lem \
  undefined.lem 

SOURCE_cabs_to_ail=\
  builtins.lem \
  cabs_to_ail_aux.lem \
  cabs_to_ail_effect.lem \
  cabs_to_ail.lem \
  scope_table.lem 

SOURCE_core=\
  core_aux.lem \
  core_ctype.lem \
  core_ctype_aux.lem \
  core.lem \
  core_typing.lem 

SOURCE_core_to_core=\
  core_indet.lem \
  core_rewrite.lem 

SOURCE_core_dynamics=\
  constraints.lem \
  core_eval.lem \
  core_run_aux.lem \
  core_run.lem \
  driver.lem \
  driver_effect.lem \
  nondeterminism.lem \
  symbolic.lem 

SOURCE_elaboration=\
  implementation_.lem \
  translation_aux.lem \
  translation_effect.lem \
  translation.lem 

SOURCE_utils=\
  debug.lem \
  pp.lem \
  boot.lem \
  decode.lem \
  dlist.lem \
  driver_util.lem \
  enum.lem \
  errors.lem \
  exception.lem \
  exception_undefined.lem \
  global.lem \
  loc.lem \
  multiset.lem \
  product.lem \
  state_exception.lem \
  state_exception_undefined.lem \
  state.lem \
  state_operators.lem \
  symbol.lem \
  thread.lem \
  uniqueId.lem \
  std.lem \
  monadic_parsing.lem \
  output.lem


SOURCE_defacto =\
  mem.lem \
  mem_aux.lem \
  mem_common.lem \
  defacto_memory_types.lem \
  defacto_memory.lem 

SOURCE_concurrency_interface =\
  cmm_aux.lem


CERBERUS_LEM_SOURCES=\
  $(SOURCE_ail) \
  $(SOURCE_ail_typing) \
  $(SOURCE_cabs) \
  $(SOURCE_cabs_to_ail) \
  $(SOURCE_core) \
  $(SOURCE_core_to_core) \
  $(SOURCE_core_dynamics) \
  $(SOURCE_elaboration) \
  $(SOURCE_utils) \
  $(SOURCE_defacto) \
  $(SOURCE_concurrency_interface)
