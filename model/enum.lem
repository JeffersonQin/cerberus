open import Pervasives

class ( Enum 'a ) 
  val toEnum:   natural -> 'a
  val fromEnum: 'a -> natural
  val succ: 'a -> 'a
end


instance (Enum natural)
  let toEnum   = id
  let fromEnum = id
  let succ n   = n + 1
end

instance (Enum nat)
  let toEnum   = natFromNatural
  let fromEnum = naturalFromNat
  let succ n   = n + 1
end



val     enumFromTo: forall 'a. Enum 'a => 'a -> 'a -> list 'a
let rec enumFromTo n m =
  if fromEnum n > fromEnum m then
    []
  else
    n :: enumFromTo (succ n) m
