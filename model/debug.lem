(* A hackish module regrouping debug related stuff. *)

open import Pervasives Global
import Boot

let _DEBUG level f k =
  if level <= Boot.debug_level then
    f k
  else
    k


(* Used in [core_run.lem], print the collected continuation in a Core program *)
let print_cont_map cont_map k =
  Boot.print_debug "TODO[newLem]" k
(*
  (  "COLLECTED CONTINUATIONS:\n" ^
  (List.fold_left (fun acc (f, ks) ->
    "In function `" ^ Boot.pp_core_expr (Core.Esym f) ^ "': [" ^
      (List.fold_left (fun acc k -> Boot.pp_core_expr (Core.Esym k) ^ ", " ^ acc) "" (List.map fst $ Pmap.bindings ks)) ^ "]\n" ^ acc
   ) "" $ Pmap.bindings cont_map))
  k
*)

