indexvar j, k ::=  {{ com index variables }}

metavar n                   ::=  {{ com integer constants }}
                                 {{ lem num }}
metavar id                  ::=  {{ com identifiers (\ailtau{} variables, functions and types names, struct/union members) }}
                                 {{ lem Symbol.t }}
metavar fname {{ tex \varphi }} ::=  {{ com \core{} function }}
metavar a {{ tex \alpha  }} ::=  {{ com symbolic name }}


grammar

terminals :: 'terminals_' ::=
  | ail_terminals  :: :: ail_terminals
  | |e-  :: :: eturnstile  {{ tex \vdash_e }}
  | |l-  :: :: lturnstile  {{ tex \vdash_\text{lvalue} }}
  | |s-  :: :: sturnstile  {{ tex \vdash_S }}
  | |-   :: :: turnstile  {{ tex \vdash }}
  | _in  :: :: _in         {{ tex \in }}
  | ~>   :: :: leadsto     {{ tex \leadsto }}
  | <-   :: :: leftarrow   {{ tex \leftarrow }}

atom {{ tex A }} :: 'atom_' ::= {{ com atomic formulÃ¦ }}
  | k          :: :: index
  | id         :: :: ident
  | ctype      :: :: ailType
  | a          :: :: sym

formula {{ tex \psi }} :: 'formula_' ::=
  | judgement            :: :: judgement
  | atom1 = atom2        :: :: eq
  | atom1 != atom2       :: :: neq {{ tex [[atom1]] \neq [[atom2]]         }}
  | formula1 /\ formula2 :: :: and {{ tex [[formula1]] \wedge [[formula2]] }}
  | formula1 \/ formula2 :: :: or  {{ tex [[formula1]] \vee [[formula2]]   }}
  
  | isLabel( id , Sig )  :: :: isLabel {{ tex [[id]] \in [[Sig]]_\text{labels} }}
  | getObject( id , a , Sig ) :: :: getObject {{ tex ([[id]],[[a]]) \in [[Sig]]_\text{objects} }}
  | core_formula         :: :: core_formula
  


parsing

formula_and <= formula_eq
formula_and <= formula_neq
formula_or <= formula_and
