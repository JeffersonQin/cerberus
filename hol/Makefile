BOLD="\033[1m"
RED="\033[31m"
YELLOW="\033[33m"
RESET="\033[0m"

# Looking for Lem
ifdef LEM_PATH
  LEMDIR=$(LEM_PATH)
else
  LEMDIR=~/bitbucket/lem
endif

LEM := $(LEMDIR)/lem
LEM_FLAGS = -wl ign -wl_rename warn -wl_pat_red err -wl_pat_exh warn \
        -only_changed_output 

# Where HOL files will be created
HOL_DIR = ../hol_generated/

# Where auxiliary scripts will be created (these are not compiled automatically)
AUX_DIR = ../hol_generated/auxScripts/

# Where LEM files are located
CMM_DIR = ../concurrency/
MODEL_DIR =../model/
AIL_DIR = ../model/ail/

# Cerberus model files
CMM = \
 cmm_aux.lem \
 cmm_csem.lem

UTILS =\
 global.lem \
 enum.lem \
 loc.lem \
 state.lem \
 uniqueId.lem \
 undefined.lem \
 implementation_.lem \
 symbol.lem \
 symbolic.lem \
 thread.lem \
 dlist.lem

DEFACTO =\
 defacto_memory.lem \
 defacto_memory_types.lem \
 mem_common.lem \
 mem.lem

CABS = \
 cabs.lem

AIL = \
 AilTypes.lem

CORE = \
 core_ctype_aux.lem \
 core_ctype.lem \
 core.lem

MODEL := $(UTILS) $(CABS) $(CORE) $(DEFACTO)
SOURCE := $(MODEL) $(AIL) $(CMM)

HOL_SCRIPTS := $(addsuffix Script.sml, $(basename $(SOURCE)))

# Create the directory where HOL files will be generated
$(HOL_DIR):
	@echo $(BOLD)CREATING the HOL build directory$(RESET)
	@mkdir $(HOL_DIR)

# Copy the mem concurrency files to the build dir
$(addprefix $(HOL_DIR), $(CMM)): $(addprefix $(CMM_DIR), $(CMM)) | $(HOL_DIR)
	@echo $(BOLD)COPYING cmm .lem files$(RESET)
	@cp $^ $(HOL_DIR)

# Copy the ail files to the build dir
$(addprefix $(HOL_DIR), $(AIL)): $(addprefix $(AIL_DIR), $(AIL)) | $(HOL_DIR)
	@echo $(BOLD)COPYING cerberus ail .lem files$(RESET)
	@cp $^ $(HOL_DIR)

# Copy the cerberus model files to the build dir
$(addprefix $(HOL_DIR), $(MODEL)): $(addprefix $(MODEL_DIR), $(MODEL)) | $(HOL_DIR)
	@echo $(BOLD)COPYING cerberus model .lem files$(RESET)
	@cp $^ $(HOL_DIR)

# Copy the cerberus files to the build dir
cerberus: $(addprefix $(HOL_DIR), $(CMM)) \
          $(addprefix $(HOL_DIR), $(AIL)) \
          $(addprefix $(HOL_DIR), $(MODEL))

# Create auxiliary folder
$(AUX_DIR): $(HOL_DIR)
	@echo $(BOLD)CREATING the auxiliary script directory$(RESET)
	@mkdir $(AUX_DIR) || true

$(HOL_SCRIPTS):%Script.sml: $(addprefix $(HOL_DIR), $(SOURCE)) | $(AUX_DIR)
	@echo $(BOLD)"Generating HOL Script files"$(RESET)
	$(LEM) -hol $(LEM_FLAGS) $^
	@mv -vf *AuxiliaryScript.sml $(AUX_DIR) || true

# Run Holmake
hol: $(HOL_SCRIPTS)
	@echo $(BOLD)Running Holmake$(RESET)
	Holmake

all: $(AUX_DIR)

# Cleaning stuff
clean:
	@echo $(BOLD)"Cleaning up files generated by Holmake"$(RESET)
	@cd $(HOL_DIR); rm -f *.ui *.uo *Theory.sml *.sig

clean-all: clean
	@echo $(BOLD)"Cleaning up everything..."$(RESET)
	@cd $(HOL_DIR); rm -f *.sml *.lem

purge:
	@echo $(BOLD)"HOL directory deleted..."$(RESET)
	@rm -r ../hol_generated
