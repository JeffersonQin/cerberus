{- If the final load of x is executed, it is required to see 1. An
exhaustive execution of this program should therefore only return 1
and 2. -}

fun main () : [integer] :=
  x <- create(_Atomic(signed int));
  y <- create(_Atomic(signed int));
  store(_Atomic(signed int), x, 0);
  store(_Atomic(signed int), y, 0);
  (foo1, foo2, a3) <- {{{
      store(_Atomic(signed int), x, 1, release)
  |||
      a1 <- load(_Atomic(signed int), x, acquire);
      if a1 = 1 then
        store(_Atomic(signed int), y, 1, release)
      else
        skip
  |||
      a2 <- load(_Atomic(signed int), y, acquire);
      if a2 = 1 then
        load(_Atomic(signed int), x, acquire)
      else
        2
  }}};
  kill(x);
  kill(y);
  ret a3