{- The loads are not allowed to both read 0, and there cannot be a
   cycle in mo union hb. The total set of allowed outcomes is 1, 2,
   3. This contrasts with the same test where release/acquire atomics
   are used and the rloads can both read 0. -}

fun main () : [integer] :=
  x <- create(_Atomic(signed int));
  y <- create(_Atomic(signed int));
  (a1, a2) <- {{{
      store(_Atomic(signed int), x, 0, seq_cst);
      store(_Atomic(signed int), y, 1, seq_cst);
      load(_Atomic(signed int), y, seq_cst)
  |||
      store(_Atomic(signed int), y, 0, seq_cst);
      store(_Atomic(signed int), x, 1, seq_cst);
      load(_Atomic(signed int), x, seq_cst)
  }}};
  kill(x);
  kill(y);
  ret a1 + (2 * a2)
