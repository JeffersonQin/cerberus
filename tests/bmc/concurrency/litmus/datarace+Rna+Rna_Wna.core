{- In every execution the first non-atomic load races with the non-atomic write. 
   This program proved an earlier version of our datarace detection wrong. In that 
   version we only checked for dataraces with the hb-latest action to that location,
   which means that in the execution where thread 1 executed before thread 2 the datarace
   was not detected.
-}

proc main () : eff unit :=
  let strong x : pointer = create(Ivalignof(!(signed int)), !(signed int)) in
  let strong _ : unit    = store(!(signed int), x, Specified(0)) in
  let strong (_ : loaded integer, _ : unit) = par(
    load(!(signed int), x)
  ,
    let strong _ : loaded integer = load(!(signed int), x) in
    store(!(signed int), x, Specified(1))
  ) in
  kill(x)

