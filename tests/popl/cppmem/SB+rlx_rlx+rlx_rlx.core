{-
// SB+rlx_rlx+rlx_rlx
// Store Buffering (or Dekker's), with all four accesses relaxed
// Question: can the two reads both see 0 in the same execution?
int main() {
  atomic_int x=0; atomic_int y=0;
  {{{ { y.store(1,memory_order_relaxed);
        r1=x.load(memory_order_relaxed); }
  ||| { x.store(1,memory_order_relaxed);
        r2=y.load(memory_order_relaxed); }  }}}
  return 0;
}
-}

fun main() : [integer] :=
  let strong x = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  let strong y = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  
  let strong () = store("_Atomic(signed int)", x, 0) in
  let strong () = store("_Atomic(signed int)", y, 0) in
  
  let strong (s1, s2) = par(
    let strong () = store("_Atomic(signed int)", y, 1, relaxed) in
    let strong r1 = load("_Atomic(signed int)", x, relaxed) in
      return(r1)
    end end
  ,
    let strong () = store("_Atomic(signed int)", x, 1, relaxed) in
    let strong r2 = load("_Atomic(signed int)", y, relaxed) in
      return(r2)
    end end
  ) in
  return((s1,s2))
  
  end end end end end