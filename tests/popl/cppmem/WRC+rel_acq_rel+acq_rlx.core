{-
// WRC
// the question is whether the final read is required to see 1
// With two release/acquire pairs, it is
int main() {
  atomic_int x = 0;
  atomic_int y = 0;

  {{{ x.store(1,mo_release);
  ||| { r1=x.load(mo_acquire).readsvalue(1);
        y.store(1,mo_release); }
  ||| { r2=y.load(mo_acquire).readsvalue(1);
        r3=x.load(mo_relaxed); }
  }}}
  return 0;
}
-}

fun main() : [integer] :=
  let strong x = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  let strong y = create(<alignof>("_Atomic(signed int)"), "_Atomic(signed int)") in
  
  let strong () = store("_Atomic(signed int)", x, 0) in
  let strong () = store("_Atomic(signed int)", y, 0) in
  
  let strong (_, s2, s3) = par(
    let strong () = store("_Atomic(signed int)", x, 1, release) in
      return(())
    end
  ,
    let strong r1 = load("_Atomic(signed int)", x, acquire) in
    let strong () = store("_Atomic(signed int)", y, 1, release) in
      return(r1)
    end end
  ,
    let strong r2 = load("_Atomic(signed int)", y, acquire) in
    let strong r3 = load("_Atomic(signed int)", x, relaxed) in
      return((r2,r3))
    end end
  ) in
  return((s2,s3))
  
  end end end end end