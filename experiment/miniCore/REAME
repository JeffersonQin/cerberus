REQUIREMENT
  * ghc (I am using 7.0.4, but it shouldn't rely on anything specific)
  * parsec
  * haskeline (both easily installed with cabal)
  
  * graphviz

COMPILING
  
  ghc --make miniCore

USAGE
  
  $ ./miniCore
  [^C to quit]>
  
  write some expression using the following syntax (BNF):
    
    e ::= [<string without uppercase>]    function call
       |  <string without lowercase>      memory action
       |  e ; e                           sequenced before
       |  e || e                          unsequenced
       |  ( e )
  
  ; has higher priority then ||.
  
  the program then generates a file sb.pdf (by calling the script run that must
  be on the execution repertory) and then ask for a new expression. If you open
  the pdf with an auto-refreshing reader, it's sort off interactive.
  
  In the graph, each box is a possible sb. If a box is yellow than there is a
  cycle (hence a bug in my code). Function calls are the salmond nodes. Black
  arrows are the ones coming from the syntax (that is from ; + transitivity),
  the plain red ones are the indeterminate choices and the dashed red ones are
  where added by transitive closure after additon of the intedeterminate
  choices.
