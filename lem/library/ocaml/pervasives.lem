(* TODO: This is not the right type *)
type int = Hol.Integer.int
val compare : forall 'a. 'a -> 'a -> int

val (::) : forall 'a. 'a -> list 'a -> list 'a
val (=) : forall 'a. 'a -> 'a -> bool
val (<>) : forall 'a. 'a -> 'a -> bool
val (<) : int -> int -> bool
val (<=) : int -> int -> bool
val (>) : int -> int -> bool
val (>=) : int -> int -> bool
val (land) : int -> int -> int
val (lor) : int -> int -> int
val (lxor) : int -> int -> int
val not : bool -> bool
val (&&) : bool -> bool -> bool
val (||) : bool -> bool -> bool
val (+) : int -> int -> int
val (-) : int -> int -> int
val ( * ) : int -> int -> int
val (/) : int -> int -> int
val (mod) : int -> int -> int
val fst : forall 'a 'b. 'a * 'b -> 'a
val snd : forall 'a 'b. 'a * 'b -> 'b
val (@) : forall 'a. list 'a -> list 'a -> list 'a
val (^) : string -> string -> string
