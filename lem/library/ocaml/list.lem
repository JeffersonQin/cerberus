val length : forall 'a.  list 'a -> num
val hd : forall 'a.  list 'a -> 'a
val tl : forall 'a.  list 'a -> list 'a
val nth : forall 'a.  list 'a -> num -> 'a
val rev : forall 'a.  list 'a -> list 'a
val append : forall 'a.  list 'a -> list 'a -> list 'a
val rev_append : forall 'a.  list 'a -> list 'a -> list 'a
val concat : forall 'a.  list (list 'a) -> list 'a
val flatten : forall 'a.  list (list 'a) -> list 'a
val map : forall 'a 'b.  ('a -> 'b) -> list 'a -> list 'b
val rev_map : forall 'a 'b.  ('a -> 'b) -> list 'a -> list 'b
val fold_left : forall 'a 'b.  ('a -> 'b -> 'a) -> 'a -> list 'b -> 'a
val fold_right : forall 'a 'b.  ('a -> 'b -> 'b) -> list 'a -> 'b -> 'b
val map2 : forall 'a 'b 'c.  ('a -> 'b -> 'c) -> list 'a -> list 'b -> list 'c
val rev_map2 : forall 'a 'b 'c.  ('a -> 'b -> 'c) -> list 'a -> list 'b -> list 'c
val fold_left2 : forall 'a 'b 'c.  ('a -> 'b -> 'c -> 'a) -> 'a -> list 'b -> list 'c -> 'a
val fold_right2 : forall 'a 'b 'c.  ('a -> 'b -> 'c -> 'c) -> list 'a -> list 'b -> 'c -> 'c
val for_all : forall 'a.  ('a -> bool) -> list 'a -> bool
val \\exists : forall 'a.  ('a -> bool) -> list 'a -> bool
val for_all2 : forall 'a 'b.  ('a -> 'b -> bool) -> list 'a -> list 'b -> bool
val exists2 : forall 'a 'b.  ('a -> 'b -> bool) -> list 'a -> list 'b -> bool
val mem : forall 'a.  'a -> list 'a -> bool
val find : forall 'a.  ('a -> bool) -> list 'a -> 'a
val filter : forall 'a.  ('a -> bool) -> list 'a -> list 'a
val find_all : forall 'a.  ('a -> bool) -> list 'a -> list 'a
val partition : forall 'a.  ('a -> bool) -> list 'a -> list 'a * list 'a
val assoc : forall 'a 'b.  'a -> list ('a * 'b) -> 'b
val mem_assoc : forall 'a 'b.  'a -> list ('a * 'b) -> bool
val remove_assoc : forall 'a 'b.  'a -> list ('a * 'b) -> list ('a * 'b)
val split : forall 'a 'b.  list ('a * 'b) -> list 'a * list 'b
val combine : forall 'a 'b.  list 'a -> list 'b -> list ('a * 'b)
val sort : forall 'a.  ('a -> 'a -> int) -> list 'a -> list 'a
val stable_sort : forall 'a.  ('a -> 'a -> int) -> list 'a -> list 'a
val fast_sort : forall 'a.  ('a -> 'a -> int) -> list 'a -> list 'a
val merge : forall 'a.  ('a -> 'a -> int) -> list 'a -> list 'a -> list 'a
