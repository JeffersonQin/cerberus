val (::) : forall 'a. 'a -> list 'a -> list 'a
val ALL_DISTINCT : forall 'a. list 'a -> bool
val APPEND : forall 'a. list 'a -> list 'a -> list 'a
val DROP : forall 'a. num -> list 'a -> list 'a
val EL : forall 'a. num -> list 'a -> 'a
val EVERY : forall 'a. ('a -> bool) -> list 'a -> bool
val EXISTS : forall 'a. ('a -> bool) -> list 'a -> bool
val FILTER : forall 'a. ('a -> bool) -> list 'a -> list 'a
val FLAT : forall 'a. list (list 'a) -> list 'a
val FOLDL : forall 'a 'b. ('a -> 'b -> 'a) -> 'a -> list 'b -> 'a
val FOLDR : forall 'a 'b. ('a -> 'b -> 'b) -> 'b -> list 'a -> 'b
val FRONT : forall 'a. list 'a -> list 'a
val GENLIST : forall 'a. (num -> 'a) -> num -> list 'a
val HD : forall 'a. list 'a -> 'a
val LAST : forall 'a. list 'a -> 'a
val LENGTH : forall 'a. list 'a -> num
val LEN : forall 'a. list 'a -> num -> num
val MAP : forall 'a 'b. ('a -> 'b) -> list 'a -> list 'b
val MAP2 : forall 'a 'b 'c. ('a -> 'b -> 'c) -> list 'a -> list 'b -> list 'c
val (MEM) : forall 'a. 'a -> list 'a -> bool
val NULL : forall 'a. list 'a
val REVERSE : forall 'a. list 'a -> list 'a
val REV : forall 'a. list 'a -> list 'a -> list 'a
val SNOC : forall 'a. 'a -> list 'a -> list 'a
val SUM : forall 'a. list num -> num
val TAKE : forall 'a. num -> list 'a -> list 'a
val TL : forall 'a. list 'a -> list 'a
val UNZIP : forall 'a 'b. list ('a * 'b) -> list 'a * list 'b
val ZIP : forall 'a 'b. list 'a * list 'b -> list ('a * 'b) 
val (++) : forall 'a. list 'a -> list 'a -> list 'a
